pipeline {
    agent { label "orca-aws-m" }
    parameters {
        string(name: 'TIMEFRAME', defaultValue: '60')
        string(name: 'RECIPIENTS', defaultValue: '{Email}')
    }
    triggers{ cron('H 6 * * 1') }
    stages {
        stage("Generate Alerts") {
            steps {
                cleanWs()
                checkout scm
                sh '/usr/local/bin/pip3 install pipenv'
                sh "/usr/local/bin/pipenv --python /usr/local/bin/python3 install"
                withCredentials([usernamePassword(credentialsId: '4c53402c-8647-45f9-8c1a-32d7b51d03e9', passwordVariable: 'CHECKMARX_PASSWORD', usernameVariable: 'CHECKMARX_USERNAME')]) {
                    withCredentials([string(credentialsId: 'checkmarx_client_secret', variable: 'checkmarx_client_secret')]) {
                        sh "/usr/local/bin/pipenv run python3 alert.py"
                    }
                }
            }
        }
    }
    post {
        success {
            script {                
                def scans = readJSON file: 'scans.json', text: ''
                def scanresults = ''
                def scancount = 0
                def table = '<tr><td><b>Product</b></td><td><b>Team</b></td><td><b>Last Scan</b></td></tr>'

                scans.each { item ->
                    scancount +=1
                    scanresults += "<tr><td>${item.Product}</td><td>${item.Team.split('Company')[1]}</td><td>${item.'Last Scan'}</td></tr>"
                }

                emailext mimeType: 'text/html', attachmentsPattern: 'scans.json',
                body: "The following product(s) have not had a scan in the last ${TIMEFRAME} day(s):<br/><table>${table}${scanresults}</table><br/><br/>Please work with your security champion(s) to kick off scans. {Web Reference}", 
                replyTo: '{Email}', subject: "${scancount} Product(s) Failing to be Scanned by Checkmarx", to: "${RECIPIENTS}"
            }
        }
        failure { 
            mail to: '{Email}', subject: "Build Failure: ${JOB_BASE_NAME}", body: "Failed to generate checkmarx alerts.  ${BUILD_URL}" 
        }
    }
}